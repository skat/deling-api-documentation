openapi: 3.0.1
info:
  title: Identity provider
  description: 'This is the identity provider for projekt DEL (Deleøkonomi).'
  termsOfService: http://swagger.io/terms/
  contact:
    email: ufst-deleokonomi@ufst.dk
  version: 0.0.1
externalDocs:
  description: See the repo here
  url: https://github.ccta.dk/TeamDelta/identity-provider
servers:
- url: http://identity-provider-deling-tst.ocpt.ccta.dk/
x-servers:
  - url: //example.com/api/
	description: Default server
tags:
- name: platforms
  description: Handling sharing-economy platforms identities of the Deleøkonomi project
- name: tokens
  description: Token validation and CPR mapping
- name: tokenGeneration
  description: Token creation for platform users when granting access for the platform
- name: landing
  description: Redirection to NemLogin for platform users when granting access for the platform
  
paths:
# ------- PlatformController -------
  /platforms/save:
    post:
      tags:
      - platforms
      summary: Add a new platform to the identity provider
      operationId: addPlatform
      requestBody:
        description: Platform object that needs to be added to the identity provider
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Platform'
          application/xml:
            schema:
              $ref: '#/components/schemas/Platform'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
        405:
          description: Validation exception
          content: {}
#      security:
  /platforms:
    get:
      tags:
      - platforms
      summary: Lists all platforms
      description: Lists all platforms registered in the identity provider
      operationId: getAllPlatforms
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Platform'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Platform'
        400:
          description: Invalid status value
          content: {}
#      security:
  /platforms/show/{platformId}:
    get:
      tags:
      - platforms
      summary: Find platform by ID
      description: Returns a single platform
      operationId: getPlatformById
      parameters:
      - name: platformId
        in: path
        description: ID of platform to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Platform'
            application/json:
              schema:
                $ref: '#/components/schemas/Platform'
  /platforms/update/{platformId}:
    post:
      tags:
      - platforms
      summary: Updates a pet in the store with form data
      operationId: updatePetWithForm
      parameters:
        - name: platformId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          
# ------- TokensController -------
  /tokens/validateToken:
    post:
      tags:
      - tokens
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
              - token
              - platformId
              properties:
                token:
                  type: string
                  example: "f42b7330-052a-433b-9047-61d1cd6f5fd5"
                platformId:
                  type: string
                  example: "9dd16393-7f23-4b4e-802b-f988b039c7d6"
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                - valid
                - message
                properties:
                  valid:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Valid Token"
        404:
          description: Not found
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                - valid
                - message
                properties:
                  valid:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Token doesn't exist"
  /tokens/getSocialSecurityFromToken/{id}:
    get:
      tags:
      - tokens
      summary: Calling get on a personal identity token returns the associated social security number
      operationId: getSocialSecurityFromToken
      parameters:
      - name: id
        in: path
        description: The identity token that is being looked up
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    $ref: '#/components/schemas/socialSecurity'
components:
  schemas:
    Platform:
      required:
      - name
      - redirectUrl
      - mailDomain
      - contactMail
      - base64Logo
      - certificate
      type: object
      properties:
        platformId:
          type: string
          example: "9dd16393-7f23-4b4e-802b-f988b039c7d6"
        name:
          type: string
          example: "GodtPlatformNavn"
        mailDomain:
          type: string
          example: "@something.dk"
        contactMail:
          type: string
          example: "something@something.dk"
        base64Logo:
          type: string
        certificate:
          type: string
    socialSecurity:
      required:
      - socialSecurityNumber
      type: object
      properties:
        socialSecurityNumber:
          type: string
          example: "123456780"
#  securitySchemes:
#    api_key:
#      type: apiKey
#      in: header
#      name: X-API-KEY
